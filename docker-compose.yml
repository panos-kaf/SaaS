version: '3.8'

services:
  # User Management Service
  user_management_app:
    build: ./user_management_service
    container_name: user_management_service
    ports:
      - "3007:3000"
    environment:
      - NODE_ENV=development
      - DB_HOST=user_management_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=user_management_db
      - DB_PORT=5432
      - JWT_SECRET=your_jwt_secret_key_here
      - JWT_EXPIRATION=24h
      - RABBITMQ_URL=amqp://rabbitmq:5672
    volumes:
      - ./user_management_service/src:/app/src
    depends_on:
      - user_management_db
      - rabbitmq
    networks:
      - academic-network
    restart: unless-stopped

  user_management_db:
    image: postgres:14-alpine
    container_name: user_management_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=user_management_db
    ports:
      - "5437:5432"
    volumes:
      - user_management_data:/var/lib/postgresql/data
      - ./user_management_service/src/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - academic-network
    restart: unless-stopped

  # Post Grades Service
  post_grades_app:
    build: ./post_grades_service
    container_name: post_grades_service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=post_grades_db
      - POSTGRES_HOST=post_grades_db
      - POST_GRADES_PORT=3002
      - RABBITMQ_URL=amqp://rabbitmq:5672
    volumes:
      - ./post_grades_service/src:/usr/src/app/src
      - ./post_grades_service/uploads:/usr/src/app/uploads
    depends_on:
      - post_grades_db
      - rabbitmq
    networks:
      - academic-network
    restart: unless-stopped

  post_grades_db:
    image: postgres:14-alpine
    container_name: post_grades_db
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=post_grades_db
    volumes:
      - postgres_post_grades_data:/var/lib/postgresql/data
      - ./post_grades_service/src/database/schema.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - academic-network
    restart: unless-stopped

  # Requests Service
  requests_app:
    build: ./requests_service
    container_name: requests_service
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - PORT=3005
      - DB_HOST=requests_db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=requests_db
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - REQUESTS_EXCHANGE=requests_exchange
      - REQUESTS_ROUTING_KEY=new_request
    depends_on:
      - requests_db
      - rabbitmq
    volumes:
      - ./requests_service/src:/app/src
    networks:
      - academic-network
    restart: unless-stopped

  requests_db:
    image: postgres:14-alpine
    container_name: requests_db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=requests_db
    volumes:
      - ./requests_service/src/database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - requests_postgres_data:/var/lib/postgresql/data
    networks:
      - academic-network
    restart: unless-stopped

  # Replies Service
  replies_app:
    build: ./replies_service
    container_name: replies_service
    ports:
      - "3006:3006"
    environment:
      - PORT=3006
      - NODE_ENV=development
      - POSTGRES_HOST=replies_db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=repliesdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - REQUESTS_EXCHANGE=requests_exchange
      - REQUESTS_ROUTING_KEY=new_request
      - USERS_EXCHANGE=users_exchange
    depends_on:
      - replies_db
      - rabbitmq
    networks:
      - academic-network
    restart: unless-stopped

  replies_db:
    image: postgres:14-alpine
    container_name: replies_db
    ports:
      - "5436:5432"
    environment:
      - POSTGRES_DB=repliesdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - replies_db_data:/var/lib/postgresql/data
    networks:
      - academic-network
    restart: unless-stopped

  # Students Courses Service
  students_courses_app:
    build: ./students_courses_service
    container_name: students_courses_service
    ports:
      - "3003:3000"
    environment:
      - NODE_ENV=development
      - DB_HOST=students_courses_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=students_courses_db
      - DB_PORT=5432
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      - students_courses_db
      - rabbitmq
    restart: unless-stopped
    networks:
      - academic-network

  students_courses_db:
    image: postgres:14-alpine
    container_name: students_courses_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: students_courses_db
    ports:
      - "5434:5432"
    volumes:
      - ./students_courses_service/src/db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - students_courses_db_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - academic-network

  # Grade Statistics Service
  grade_statistics_app:
    build: ./grade_statistics_service-1
    container_name: grade_statistics_service
    ports:
      - "3004:3000"
    depends_on:
      - grade_statistics_db
      - rabbitmq
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=grade_statistics_db
      - DB_NAME=grade_statistics_db
      - DB_PORT=5432
      - RABBITMQ_URL=amqp://rabbitmq:5672
    networks:
      - academic-network
    restart: unless-stopped

  grade_statistics_db:
    image: postgres:14-alpine
    container_name: grade_statistics_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: grade_statistics_db
    ports:
      - "5438:5432"
    volumes:
      - ./grade_statistics_service-1/src/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - grade_statistics_data:/var/lib/postgresql/data
    networks:
      - academic-network

  # Shared RabbitMQ service for all microservices
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5673:5672"   # Changed from 5672:5672 to avoid conflict
      - "15672:15672" # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - academic-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  user_management_data:
  postgres_post_grades_data:
  requests_postgres_data:
  replies_db_data:
  students_courses_db_data:
  grade_statistics_data:
  rabbitmq_data:

networks:
  academic-network:
    driver: bridge