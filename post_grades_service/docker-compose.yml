version: '3.8'

services:
  post-grades-app:
    build: .
    container_name: post-grades-service
    ports:
      - "3002:3002" # Exposes port 3002 on the host to port 3002 in the container
    environment:
      - NODE_ENV=development
      - POSTGRES_USER=your_db_user # Or use a .env file
      - POSTGRES_PASSWORD=your_db_password # Or use a .env file
      - POSTGRES_DB=post_grades_db
      - POSTGRES_HOST=post-grades-db # Service name of the postgres container
      - POST_GRADES_PORT=3002
    volumes:
      - ./src:/usr/src/app/src # Mounts the src directory for live code changes
      - ./uploads:/usr/src/app/uploads # Mounts the uploads directory
    depends_on:
      - post-grades-db
    networks:
      - app-network

  post-grades-db:
    image: postgres:13-alpine
    container_name: post-grades-postgres
    ports:
      - "5435:5432" # Exposes PostgreSQL on host port 5435 to container port 5432 (to avoid conflict if other postgres instances run on 5432)
    environment:
      - POSTGRES_USER=your_db_user # Should match the app's environment
      - POSTGRES_PASSWORD=your_db_password # Should match the app's environment
      - POSTGRES_DB=post_grades_db
    volumes:
      - postgres_post_grades_data:/var/lib/postgresql/data
      - ./src/database/schema.sql:/docker-entrypoint-initdb.d/init.sql # Initializes DB with schema
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U your_db_user -d post_grades_db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_post_grades_data: # Persists database data across container restarts

networks:
  app-network:
    driver: bridge
